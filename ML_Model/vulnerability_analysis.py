import requests
import socket
import json
import concurrent.futures
import nmap
import re

TARGET_URL = "http://example.com"
CVE_API_URL = "https://services.nvd.nist.gov/rest/json/cves/1.0"
SCAN_REPORT = "scan_report.json"

def check_sql_injection(url):
    payload = "' OR '1'='1"
    response = requests.get(f"{url}?id={payload}")
    if "syntax error" in response.text.lower() or "mysql" in response.text.lower():
        return True
    return False

def check_xss(url):
    payload = "<script>alert('XSS')</script>"
    response = requests.get(f"{url}?q={payload}")
    if payload in response.text:
        return True
    return False

def scan_open_ports(ip):
    nm = nmap.PortScanner()
    nm.scan(ip, "1-1024")
    open_ports = [port for port in nm[ip]["tcp"] if nm[ip]["tcp"][port]["state"] == "open"]
    return open_ports

def check_cve_vulnerabilities(service):
    response = requests.get(f"{CVE_API_URL}?keyword={service}")
    if response.status_code == 200:
        data = response.json()
        vulnerabilities = [item["cve"]["CVE_data_meta"]["ID"] for item in data.get("result", {}).get("CVE_Items", [])]
        return vulnerabilities
    return []

def scan_target(target):
    ip = socket.gethostbyname(target)
    sql_injection = check_sql_injection(target)
    xss = check_xss(target)
    open_ports = scan_open_ports(ip)
    vulnerabilities = {}

    for port in open_ports:
        service = f"port-{port}"
        vulnerabilities[service] = check_cve_vulnerabilities(service)

    result = {
        "target": target,
        "sql_injection": sql_injection,
        "xss": xss,
        "open_ports": open_ports,
        "cve_vulnerabilities": vulnerabilities
    }

    with open(SCAN_REPORT, "w") as f:
        json.dump(result, f, indent=4)

    return result

def start_scan():
    with concurrent.futures.ThreadPoolExecutor() as executor:
        future = executor.submit(scan_target, TARGET_URL)
        return future.result()

if __name__ == "__main__":
    scan_result = start_scan()
    print(json.dumps(scan_result, indent=4))
